{"version":3,"sources":["images/openmymed.png","registerServiceWorker.js","utils/api.js","components/AddPatient.js","components/Navbar.js","components/Card.js","components/Overview.js","components/Accordion.js","components/PatientUpdates.js","views/Home/Home.js","components/Answers.js","components/Symptoms.js","components/Vitals.js","components/MedicalProfile.js","components/Profile.js","views/Patient-Details/PatientDetails.js","components/AddEditQuestion.js","views/Patient-Questions/PatientQuestions.js","views/Patient-List/PatientList.js","views/Signin/Signin.js","utils/icpc.js","App.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","headers","process","res","ok","json","status","Error","getPatientMedicalProfile","patientId","fetch","method","getPatientPersonalProfile","AddPatient","props","code","handleChange","bind","handleSubmit","e","this","setState","target","value","body","JSON","stringify","Modal","show","onHide","onClose","animation","Header","closeButton","Title","Body","Form","Group","Label","Control","type","onChange","Footer","Button","variant","onClick","onSubmit","Component","mql","matchMedia","Navbar","updateDimensions","innerWidth","width","sidebarDocked","showModal","fullname","matches","sidebarOpen","mediaQueryChanged","onSetSidebarOpen","addEventListener","removeEventListener","open","sidebar","className","to","icon","faHome","faUser","faSignOutAlt","onShowModal","handleModalClose","docked","onSetOpen","styles","zIndex","background","children","Card","title","number","Overview","totalPatients","totalSymptoms","totalAnswers","_updateTotalAnswers","_updateTotalSymptoms","_updateTotalPatients","Carousel","Item","Row","count","Accordion","feed","faCaretDown","setOpen","url","id","aria-controls","aria-expanded","name","colSpan","Collapse","in","date","question","onDelete","faCaretUp","PatientUpdates","handleChildUnmount","feedId","index","feeds","indexOf","splice","getDoctorFeed","scope","map","key","Home","Answers","isVisible","answers","getAnswers","data","answerText","time","askUrl","answer","Answer","handleDismiss","faCalendar","faClock","Symptoms","symptoms","getSymptoms","note","symptom","Symptom","Vitals","oxygenationData","heartBeatsPerMinuteData","systolicData","diastolicData","breathingRateData","getVitals","createBloodPressureGraph","createGraph","canvas","parentNode","offsetWidth","height","offsetHeight","Chart","getContext","datasets","label","borderColor","fill","showLine","lineTension","options","responsive","display","text","scales","xAxes","displayFormats","hour","unit","x","scaleLabel","labelString","y","dataset","xLabel","yLabel","MedicalProfile","Check","disabled","checked","g6pdDeficiency","respiratoryDiseases","diabetes","cardiovascularDiseases","obesity","medications","medication","Profile","age","sex","weight","getPatientProfile","api","obseity","firstName","lastName","alt","src","PatientDetails","params","setKey","activeTab","Tabs","activeKey","onSelect","Tab","eventKey","withRouter","AddEditQuestion","questionText","questionType","recurrance","fromDate","Date","startDate","toLocaleDateString","toDate","endDate","recurring","repetitions","parse","push","hourOfDay","minuteOfHour","style","as","handleRecurring","repetition","handleAddRecurrence","faPlus","Repetition","repitition","items","timeInput","padStart","indexText","splits","split","parseInt","onInput","handleInput","faTimes","el","dispatchEvent","CustomEvent","detail","newList","bubbles","PatientQuestions","questions","loadQuestions","handleAddQuestion","Question","repetitionText","length","handleEdit","faPen","PatientList","patients","getPatientList","patient","PatientEntry","Signin","username","password","Logo","controlId","placeholder","Feedback","preventDefault","sessionStorage","setItem","userRole","fullName","alert","localStorage","history","App","exact","path","component","ReactDOM","render","document","getElementById","URL","origin","response","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5c58e674.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/openmymed.5d8d1511.png\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\nconst headers = {\n  \"Content-Type\": \"application/json\",\n};\nconst process = (res) => {\n  if (res.ok) {\n    return res.json();\n  } else if (res.status === 401 || res.status === 403) {\n    // goto(\"login\", []);\n  } else {\n    throw new Error(res.status);\n  }\n};\n\nexport const getPatientVitals = (patientId) => {\n  return fetch(\"/doctor/patient/\" + patientId + \"/vitals\", {\n    method: \"GET\",\n    headers: headers,\n  }).then((res) => {\n    return process(res);\n  });\n};\n\nexport const addDoctor = (doctor) => {\n  return fetch(\"/admin/doctor\", {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify(doctor),\n  }).then((res) => {\n    return process(res);\n  });\n};\n\nexport const assignPatientToMyself = (code) => {\n  return fetch(\"/doctor/patient/add\", {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify({\n      code: code,\n    }),\n  }).then((res) => {\n    return process(res);\n  });\n};\n\nexport const getPatientAnswers = (patientId) => {\n  return fetch(\"/doctor/patient/\" + patientId + \"/answer\", {\n    method: \"GET\",\n    headers: headers,\n  }).then((res) => {\n    return process(res);\n  });\n};\n\nexport const archiveAnswer = (patientId, answerId) => {\n  return fetch(\n    \"/doctor/patient/\" + patientId + \"/answer/\" + answerId + \"/seen\",\n    {\n      method: \"PUT\",\n      headers: headers,\n    }\n  ).then((res) => {\n    return process(res);\n  });\n};\n\nexport const getPatientMedicalProfile = (patientId) => {\n  return fetch(\"/doctor/patient/\" + patientId, {\n    method: \"GET\",\n    headers: headers,\n  }).then((res) => {\n    return process(res);\n  });\n};\n\nexport const getPatientPersonalProfile = (patientId) => {\n  return fetch(\"/doctor/patient/\" + patientId, {\n    method: \"GET\",\n    headers: headers,\n  }).then((res) => {\n    return process(res);\n  });\n};\n\nexport const getPatientsCount = () => {\n  return fetch(\"/doctor/patient/count\", {\n    method: \"GET\",\n    headers: headers,\n  }).then((res) => {\n    return process(res);\n  });\n};\n\nexport const getUarchivedSymptomsCount = () => {\n  return fetch(\"/doctor/patient/symptom/count\", {\n    method: \"GET\",\n    headers: headers,\n  }).then((res) => {\n    return process(res);\n  });\n};\n\nexport const getUnarchivedAnswersCount = () => {\n  return fetch(\"/doctor/patient/answer/count\", {\n    method: \"GET\",\n    headers: headers,\n  }).then((res) => {\n    return process(res);\n  });\n};\n\nexport const getDoctorFeed = () => {\n  return fetch(\"/doctor/feed\", {\n    method: \"GET\",\n    headers: headers,\n  }).then((res) => {\n    return process(res);\n  });\n};\n\nexport const getPatientSymptoms = (patientId) => {\n  return fetch(\"/doctor/patient/\" + patientId + \"/symptom\", {\n    method: \"GET\",\n    headers: headers,\n  }).then((res) => {\n    return process(res);\n  });\n};\n\nexport const getPatients = () => {\n  return fetch(\"/doctor/patient\", {\n    method: \"GET\",\n    headers: headers,\n  }).then((res) => {\n    return process(res);\n  });\n};\n\nexport const getPatientQuestions = (patientId) => {\n  return fetch(\"/doctor/patient/\" + patientId + \"/question\", {\n    method: \"GET\",\n    headers: headers,\n  }).then((res) => {\n    return process(res);\n  });\n};\n\nexport const addQuestion = (patientId, question) => {\n  return fetch(\"/doctor/patient/\" + patientId + \"/question\", {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify(question),\n  }).then((res) => {\n    return process(res);\n  });\n};\n\nexport const login = (username, password) => {\n  return fetch(\"/login\", {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify({\n      username: username,\n      password: password,\n    }),\n  }).then((res) => {\n    return process(res);\n  });\n};\n","import React, { Component } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport * as api from \"../utils/api\";\n\nclass AddPatient extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { code: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(e) {\n    this.setState({\n      code: e.target.value,\n    });\n  }\n  handleSubmit() {\n    api.assignPatientToMyself(this.state.code);\n  }\n\n  render() {\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={this.props.onClose}\n        animation={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add Patient</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form.Group>\n            <Form.Label>Secret Code</Form.Label>\n            <Form.Control\n              value={this.state.code}\n              type=\"text\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" type=\"submit\" onSubmit={this.handleSubmit}>\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\nexport default AddPatient;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport AddPatient from \"./AddPatient\";\nimport Sidebar from \"react-sidebar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHome,\n  faSignOutAlt,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst mql = window.matchMedia(`(min-width: 800px)`);\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      // fullname: sessionStorage.getItem(\"name\"),\n      fullname: \"Majed Nuseibeh\",\n      sidebarDocked: mql.matches,\n      sidebarOpen: false,\n      width: window.innerWidth,\n    };\n    this.mediaQueryChanged = this.mediaQueryChanged.bind(this);\n    this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\n  }\n\n  updateDimensions = () => {\n    if (window.innerWidth <= 650) {\n      this.setState({ width: window.innerWidth, sidebarDocked: false });\n    } else {\n      this.setState({ width: window.innerWidth, sidebarDocked: true });\n    }\n  };\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  handleModalClose() {\n    this.setState({ showModal: false });\n  }\n\n  onShowModal() {\n    this.setState({ sidebarOpen: false, showModal: true });\n  }\n\n  onSetSidebarOpen(open) {\n    this.setState({ sidebarOpen: open });\n  }\n\n  mediaQueryChanged() {\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false });\n  }\n\n  render() {\n    if (this.state.width <= 650) {\n      return (\n        <Sidebar\n          sidebar={\n            <div>\n              {/* {this.ModalRef} */}\n              <h5 className=\"text-white bg-info py-4 pl-4 pr-5\">\n                Dr. {this.state.fullname}\n              </h5>\n              <div className=\"text-left text-white pl-4 pr-5\">\n                <ul className=\"navbar-nav mt-5\">\n                  <li className=\"d-block nav-item\">\n                    <Link className=\" text-info nav-link\" to=\"/home\">\n                      <FontAwesomeIcon className=\"mr-1\" icon={faHome} />\n                      Home\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link className=\"text-info nav-link\" to=\"/patients\">\n                      <FontAwesomeIcon className=\"mr-1\" icon={faUser} />\n                      My Patients\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link className=\"text-info nav-link\" to=\"/\">\n                      <FontAwesomeIcon className=\"mr-1\" icon={faSignOutAlt} />\n                      Logout\n                    </Link>\n                  </li>\n                </ul>\n              </div>\n              <Button\n                className=\"ml-4 mt-5\"\n                onClick={this.onShowModal.bind(this)}\n              >\n                Add Patient\n              </Button>\n              <AddPatient\n                onClose={this.handleModalClose.bind(this)}\n                show={this.state.showModal}\n              />\n            </div>\n          }\n          open={this.state.sidebarOpen}\n          docked={this.state.sidebarDocked}\n          onSetOpen={this.onSetSidebarOpen}\n          styles={{ sidebar: { zIndex: 9998, background: \"white\" } }}\n        >\n          <div className=\"d-flex justify-content-between bg-info\">\n            <Button\n              className=\"navbar-dark navbar-toggler btn-info\"\n              onClick={() => this.onSetSidebarOpen(true)}\n            >\n              <span className=\"navbar-toggler-icon\"></span>\n            </Button>\n            <h4 className=\"mt-2 text-white\">Access.md</h4>\n            {/* this 2 paragraph tags are used to give space to the title */}\n            <p></p>\n            <p></p>\n          </div>\n          {this.props.children}\n        </Sidebar>\n      );\n    } else {\n      return (\n        <Sidebar\n          sidebar={\n            <div>\n              {/* {this.ModalRef} */}\n              <h5 className=\"text-white bg-info py-4 pl-4 pr-5\">\n                Dr. {this.state.fullname}\n              </h5>\n              <div className=\"text-left text-white pl-4 pr-5\">\n                <ul className=\"navbar-nav mt-5\">\n                  <li className=\"d-block nav-item\">\n                    <Link className=\" text-info nav-link\" to=\"/home\">\n                      <FontAwesomeIcon className=\"mr-1\" icon={faHome} />\n                      Home\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link className=\"text-info nav-link\" to=\"/patients\">\n                      <FontAwesomeIcon className=\"mr-1\" icon={faUser} />\n                      My Patients\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link className=\"text-info nav-link\" to=\"/\">\n                      <FontAwesomeIcon className=\"mr-1\" icon={faSignOutAlt} />\n                      Logout\n                    </Link>\n                  </li>\n                </ul>\n              </div>\n              <Button\n                className=\"ml-4 mt-5\"\n                onClick={this.onShowModal.bind(this)}\n              >\n                Add Patient\n              </Button>\n              <AddPatient\n                onClose={this.handleModalClose.bind(this)}\n                show={this.state.showModal}\n              />\n            </div>\n          }\n          open={this.state.sidebarOpen}\n          docked={this.state.sidebarDocked}\n          onSetOpen={this.onSetSidebarOpen}\n          styles={{ sidebar: { zIndex: 9999, background: \"white\" } }}\n        >\n          <div className=\"d-flex justify-content-center border-bottom\">\n            <h4 className=\"mt-2 text-info font-weight-bold\">Access.md</h4>\n          </div>\n          {this.props.children}\n        </Sidebar>\n      );\n    }\n  }\n}\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport \"../App.css\";\n\nclass Card extends Component {\n  render() {\n    return (\n      <div className=\"col-lg-4 p-2 text-center\">\n        <div className=\"card card-common rounded-lg bg-white border border-2 border-info\">\n          <div className=\"card-body\">\n            <div className=\"d-flex justify-content-center\">\n              <div className=\"flex-column\">\n                <h6 className=\"font-weight-bold\">{this.props.title}</h6>\n                <h1 className=\"pt-2 text-info font-weight-bold\">\n                  {this.props.number}\n                </h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Card;\n","import React, { Component } from \"react\";\nimport { Carousel, Row } from \"react-bootstrap\";\nimport * as api from \"../utils/api\";\nimport \"./../App.css\";\nimport Card from \"./Card\";\n\nclass Overview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      totalPatients: \"0\",\n      totalSymptoms: \"0\",\n      totalAnswers: \"0\",\n    };\n    this._updateTotalAnswers = this._updateTotalAnswers.bind(this);\n    this._updateTotalSymptoms = this._updateTotalSymptoms.bind(this);\n    this._updateTotalPatients = this._updateTotalPatients.bind(this);\n  }\n  updateDimensions = () => {\n    this.setState({ width: window.innerWidth });\n  };\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n\n    //uncomment these when api is ready\n    // this._updateTotalAnswers();\n    // this._updateTotalSymptoms();\n    // this._updateTotalPatients();\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render() {\n    if (this.state.width <= 992) {\n      return (\n        <Carousel>\n          <Carousel.Item>\n            <Card\n              title=\"Total Patients\"\n              number={this.state.totalPatients}\n            ></Card>\n          </Carousel.Item>\n          <Carousel.Item>\n            <Card\n              title=\"Unseen Symptoms\"\n              number={this.state.totalSymptoms}\n            ></Card>\n          </Carousel.Item>\n          <Carousel.Item>\n            <Card\n              title=\"Unseen Answers\"\n              number={this.state.totalAnswers}\n            ></Card>\n          </Carousel.Item>\n        </Carousel>\n      );\n    } else {\n      return (\n        <Row className=\"mt-4 mx-0\">\n          <div className=\"col-lg-12\">\n            <div className=\"ml-5 row pt-md-2\">\n              <Card\n                title=\"Total Patients\"\n                number={this.state.totalPatients}\n              ></Card>\n              <Card\n                title=\"Unseen Symptoms\"\n                number={this.state.totalSymptoms}\n              ></Card>\n              <Card\n                title=\"Unseen Answers\"\n                number={this.state.totalAnswers}\n              ></Card>\n            </div>\n          </div>\n        </Row>\n      );\n    }\n  }\n\n  _updateTotalPatients() {\n    api.getPatientsCount().then((json) => {\n      this.setState({\n        totalPatients: json.count,\n      });\n    });\n  }\n\n  _updateTotalSymptoms() {\n    api.getUarchivedSymptomsCount().then((json) => {\n      this.setState({\n        totalSymptoms: json.count,\n      });\n    });\n  }\n\n  _updateTotalAnswers() {\n    api.getUnarchivedAnswersCount().then((json) => {\n      this.setState({\n        totalAnswers: json.count,\n      });\n    });\n  }\n}\nexport default Overview;\n","import React, { Component } from \"react\";\nimport { Button, Collapse } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretDown, faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Accordion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      feed: this.props.children,\n      open: false,\n      icon: faCaretDown,\n    };\n\n    this.setOpen = this.setOpen.bind(this);\n  }\n\n  updateDimensions = () => {\n    this.setState({ width: window.innerWidth });\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render() {\n    let url = \"/patient/\" + this.props.children.id;\n    if (this.state.width <= 1115) {\n      return (\n        <tbody>\n          <tr\n            onClick={() => this.setOpen(!this.state.open)}\n            aria-controls=\"patientActivities\"\n            aria-expanded={this.state.open}\n          >\n            <td>\n              <FontAwesomeIcon icon={this.state.icon} />\n            </td>\n            <td>{this.state.feed.name}</td>\n            <td>{this.state.feed.type}</td>\n          </tr>\n          <tr>\n            <td colSpan=\"3\" className=\"p-0\">\n              <Collapse in={this.state.open}>\n                <div id=\"patientActivities\">\n                  <div className=\"card card-body\">\n                    <p>{this.state.feed.name}</p>\n                    <p>{this.state.feed.date}</p>\n                    <p>{this.state.feed.question}</p>\n                    <div className=\"d-flex\">\n                      <Link to={url} className=\"mr-1 btn btn-primary\">\n                        Profile\n                      </Link>\n                      <Button\n                        variant=\"danger\"\n                        onClick={() => this.props.onDelete(this.props.children)}\n                      >\n                        Close\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </Collapse>\n            </td>\n          </tr>\n        </tbody>\n      );\n    } else {\n      return (\n        <tbody>\n          <tr>\n            <td className=\"text-left\">{this.state.feed.name}</td>\n            <td className=\"text-center\">{this.state.feed.type}</td>\n            <td className=\"text-center\">{this.state.feed.date}</td>\n            <td className=\"text-center\">{this.state.feed.question}</td>\n            <td className=\"text-right\">\n              <Button\n                className=\"btn btn-danger btn-sm mr-1\"\n                onClick={() => this.props.onDelete(this.props.children)}\n              >\n                Dismiss\n              </Button>\n              <Link to={url} className=\"btn btn-primary btn-sm\">\n                Profile\n              </Link>\n            </td>\n          </tr>\n        </tbody>\n      );\n    }\n  }\n  setOpen(value) {\n    if (value) {\n      this.setState({\n        open: value,\n        icon: faCaretUp,\n      });\n    } else {\n      this.setState({\n        open: value,\n        icon: faCaretDown,\n      });\n    }\n  }\n}\n\nexport default Accordion;\n","import React, { Component } from \"react\";\nimport Accordion from \"./Accordion\";\nimport * as api from \"../utils/api\";\n\nclass PatientUpdates extends Component {\n  constructor() {\n    super();\n    this.state = {\n      feeds: [],\n      width: window.innerWidth,\n    };\n    this.getDoctorFeed = this.getDoctorFeed.bind(this);\n    // this.handleChildUnmount = this.handleChildUnmount.bind(this);\n  }\n\n  updateDimensions = () => {\n    this.setState({ width: window.innerWidth });\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n    this.getDoctorFeed();\n  }\n  handleChildUnmount = (feedId) => {\n    //this does delete items but not the correct one i dont know why there is problem with setState\n    // console.log(feedId);\n    // const newFeeds = this.state.feeds.filter((feed) => feed.id !== feedId);\n    // console.log(newFeeds);\n    var index = this.state.feeds.indexOf(feedId);\n    this.state.feeds.splice(index, 1);\n    // this.state.feeds.pop(feedId);\n    // this.setState({ feeds: newFeeds });\n    this.setState(this.state.feeds);\n  };\n\n  getDoctorFeed() {\n    // api.getDoctorFeed().then((json) => {\n    //   this.setState({ feeds: json });\n    // });\n    //dummy data\n    this.setState({\n      feeds: [\n        {\n          id: 1,\n          name: \"Majed Nuss\",\n          type: \"Answer\",\n          date: \"4/27/2020 @ 5:49:07 PM\",\n          question: \"Question : Do you have fever?\",\n        },\n        {\n          id: 2,\n          name: \"Ahmad Nuss\",\n          type: \"Answer\",\n          date: \"4/27/2020 @ 5:49:07 PM\",\n          question: \"Question : Do you have fever?\",\n        },\n        {\n          id: 3,\n          name: \"Ahmad Nuss\",\n          type: \"Answer\",\n          date: \"4/27/2020 @ 5:49:07 PM\",\n          question: \"Question : Do you have fever?\",\n        },\n      ],\n    });\n  }\n\n  render() {\n    if (this.state.width <= 1115) {\n      return (\n        <div className=\"col-sm-12 mt-4\">\n          <h5>Last Activities</h5>\n          <div className=\"mt-4\">\n            <table className=\"table\">\n              <thead className=\"bg-info text-white\">\n                <tr>\n                  <th></th>\n                  <th scope=\"col\">Patient Name</th>\n                  <th scope=\"col\">Update Type</th>\n                </tr>\n              </thead>\n              {this.state.feeds.map((feed) => (\n                <Accordion\n                  onDelete={this.handleChildUnmount.bind(this)}\n                  key={this.state.feeds.indexOf(feed)}\n                >\n                  {feed}\n                </Accordion>\n              ))}\n            </table>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"col-sm-12 mt-4\">\n          <h5>Last Activities</h5>\n          <div className=\"mt-4\">\n            <table className=\"table\">\n              <thead className=\"bg-info text-white\">\n                <tr>\n                  <th scope=\"col\" className=\"text-left\">\n                    Patient Name\n                  </th>\n                  <th scope=\"col\" className=\"text-center\">\n                    Update Type\n                  </th>\n                  <th scope=\"col\" className=\"text-center\">\n                    Time\n                  </th>\n                  <th scope=\"col\" className=\"text-center\">\n                    Details\n                  </th>\n                  <th scope=\"col\" className=\"text-right\"></th>\n                </tr>\n              </thead>\n              {this.state.feeds.map((feed) => (\n                <Accordion\n                  onDelete={this.handleChildUnmount.bind(this)}\n                  key={this.state.feeds.indexOf(feed)}\n                >\n                  {feed}\n                </Accordion>\n              ))}\n            </table>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default PatientUpdates;\n","import React, { Component } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport Overview from \"../../components/Overview\";\nimport PatientUpdates from \"../../components/PatientUpdates\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <Navbar>\n        <Overview></Overview>\n        <PatientUpdates></PatientUpdates>\n      </Navbar>\n    );\n  }\n}\nexport default Home;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendar, faClock } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport * as api from \"../utils/api\";\n\nclass Answers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { answers: [], isVisible: window.innerWidth < 1080 };\n    this.getAnswers = this.getAnswers.bind(this);\n  }\n  updateDimensions = () => {\n    if (window.innerWidth < 1080) {\n      this.setState({ width: window.innerWidth, isVisible: true });\n    } else {\n      this.setState({ width: window.innerWidth, isVisible: false });\n    }\n  };\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n    this.getAnswers();\n  }\n  getAnswers() {\n    api.getPatientAnswers(this.props.patientId).then((data) => {\n      this.setState({ answers: data });\n    });\n    this.setState({\n      answers: [\n        {\n          id: 1,\n          name: \"Do you have fever? \",\n          answerText: \"123\",\n          date: \"4/27/2020\",\n          time: \"5:49:07 PM\",\n        },\n        {\n          id: 1,\n          name: \"Do you have fever?\",\n          answerText: \"123\",\n          date: \"4/27/2020\",\n          time: \"5:49:07 PM\",\n        },\n        {\n          id: 1,\n          name: \"Do you have fever?\",\n          answerText: \"123\",\n          date: \"4/27/2020\",\n          time: \"5:49:07 PM\",\n        },\n      ],\n    });\n  }\n\n  render() {\n    let askUrl = \"/ask/\" + this.props.patientId;\n    return (\n      <div className=\"mx-2\">\n        <div className=\"d-flex justify-content-between\">\n          <h5 className=\"text-info font-weight-bold p-2 mt-3 mb-0\">\n            Patient Answers\n          </h5>\n          <div className=\"mt-3\">\n            <Link\n              className={`btn btn-primary btn-sm text-white ${\n                this.state.isVisible ? \"\" : \"invisible\"\n              }`}\n              to={askUrl}\n            >\n              Questions\n            </Link>\n          </div>\n        </div>\n        <div className=\"col-12 mb-2\">\n          {this.state.answers.map((answer) => (\n            <Answer key={this.state.answers.indexOf(answer)}>{answer}</Answer>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\nexport default Answers;\n\nclass Answer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { answer: props.children };\n    this.handleDismiss = this.handleDismiss.bind(this);\n  }\n  handleDismiss() {\n    //here we handle answers dismiss\n  }\n  render() {\n    return (\n      <div className=\"row mt-2\">\n        <div className=\"answer-card card card-common rounded-lg w-100\">\n          <div className=\"card-header d-flex justify-content-start\">\n            <h6>{this.state.answer.name}</h6>\n          </div>\n          <div className=\"card-body w-100\">\n            <div className=\"answer-note\">{this.state.answer.answerText}</div>\n\n            <div className=\"d-flex justify-content-between mt-2 w-100\">\n              <div>\n                <div>\n                  <FontAwesomeIcon className=\"mr-1\" icon={faCalendar} />\n                  {this.state.answer.date}\n                </div>\n                <div>\n                  <FontAwesomeIcon className=\"mr-1\" icon={faClock} />\n                  {this.state.answer.time}\n                </div>\n              </div>\n              <div>\n                <button\n                  this=\"dismiss\"\n                  className=\"btn btn-danger btn-sm\"\n                  onClick={this.handleDismiss}\n                >\n                  Dismiss\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendar, faClock } from \"@fortawesome/free-solid-svg-icons\";\nimport { getTitle } from \"../utils/icpc\";\nimport * as api from \"../utils/api\";\n\nclass Symptoms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { symptoms: [] };\n    this.getSymptoms = this.getSymptoms.bind(this);\n  }\n\n  componentDidMount() {\n    this.getSymptoms();\n  }\n\n  getSymptoms() {\n    api.getPatientSymptoms(this.props.patientId).then((data) => {\n      this.setState({ symptoms: data });\n    });\n\n    this.setState({\n      symptoms: [\n        {\n          id: 1,\n          name: \"Do you have fever? \",\n          answerText: \"123\",\n          date: \"4/27/2020\",\n          time: \"5:49:07 PM\",\n        },\n        {\n          id: 1,\n          name: \"Do you have fever?\",\n          answerText: \"123\",\n          date: \"4/27/2020\",\n          time: \"5:49:07 PM\",\n        },\n        {\n          id: 1,\n          name: \"Do you have fever?\",\n          note: \"123\",\n          date: \"4/27/2020\",\n          time: \"5:49:07 PM\",\n        },\n      ],\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"mx-2\">\n          <h5 className=\"text-info font-weight-bold p-2 mt-3\">\n            Patient Symptoms\n          </h5>\n          <div className=\"col-12 mb-2\">\n            {this.state.symptoms.map((symptom) => (\n              <Symptom key={this.state.symptoms.indexOf(symptom)}>\n                {symptom}\n              </Symptom>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Symptoms;\n\nclass Symptom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { symptom: props.children };\n    this.handleDismiss = this.handleDismiss.bind(this);\n  }\n\n  handleDismiss() {\n    //    this._dismiss().then((res) => {\n    //      unmount(this.el.parentNode, this);\n    //    });\n    //      _dismiss() {\n    //     return api.archiveSymptom(this.patientId, this.data.id);\n    //   }\n  }\n\n  render() {\n    return (\n      <div className=\"row mt-2\">\n        <div className=\"symptom-card card card-common rounded-lg w-100\">\n          <div className=\"card-header d-flex justify-content-start\">\n            <h6>{this.state.symptom.name}</h6>\n          </div>\n          <div className=\"card-body w-100\">\n            <div className=\"symptom-note\">{this.state.symptom.note}</div>\n            <div className=\"d-flex justify-content-between mt-2 w-100\">\n              <div>\n                <div>\n                  <FontAwesomeIcon className=\"mr-1\" icon={faCalendar} />\n                  {this.state.symptom.date}\n                </div>\n                <div>\n                  <FontAwesomeIcon className=\"mr-1\" icon={faClock} />\n                  {this.state.symptom.time}\n                </div>\n              </div>\n              <div>\n                <button\n                  this=\"dismiss\"\n                  className=\"btn btn-danger btn-sm\"\n                  onClick={this.handleDismiss}\n                >\n                  Dismiss\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport * as api from \"../utils/api\";\nimport { Chart } from \"chart.js\";\nimport { Collapse } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretDown, faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\nimport \"moment\";\nimport \"chartjs-adapter-moment\";\n\nclass Vitals extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      open: false,\n      icon: faCaretDown,\n      oxygenationData: [],\n      heartBeatsPerMinuteData: [],\n      systolicData: [],\n      diastolicData: [],\n      breathingRateData: [],\n    };\n    this.setOpen = this.setOpen.bind(this);\n    this.getVitals = this.getVitals.bind(this);\n    this.createBloodPressureGraph = this.createBloodPressureGraph.bind(this);\n    this.createGraph = this.createGraph.bind(this);\n  }\n\n  updateDimensions = () => {\n    this.setState({ width: window.innerWidth });\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n    this.getVitals();\n  }\n\n  setOpen(value) {\n    if (value) {\n      this.setState({\n        open: value,\n        icon: faCaretUp,\n      });\n    } else {\n      this.setState({\n        open: value,\n        icon: faCaretDown,\n      });\n    }\n  }\n  render() {\n    if (this.state.width <= 1080) {\n      return (\n        <div className=\"mt-3 col-12\">\n          <div className=\"mt-3 oxygenation-chart\">\n            <canvas this=\"oxygenationChart\"></canvas>\n          </div>\n          <div className=\"mt-3 heart-beats-chart \">\n            <canvas this=\"heartBeatsChart\"></canvas>\n          </div>\n\n          <div className=\"mt-3 breathing-rate-chart\">\n            <canvas this=\"breathignRateChart\"></canvas>\n          </div>\n          <div className=\"mt-3\">\n            <div className=\"row blood-pressure-chart\">\n              <canvas this=\"bloodPressureChart\"></canvas>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"col-12 p-0\">\n          <div\n            className=\"d-flex bg-info mx-auto px-2 py-1\"\n            onClick={() => this.setOpen(!this.state.open)}\n          >\n            <FontAwesomeIcon\n              icon={this.state.icon}\n              className=\"text-white align-bottom\"\n            />\n            <h5\n              className=\"w-100 m-0 ml-2 text-white\"\n              aria-expanded={this.state.open}\n              aria-controls=\"patientVitals\"\n            >\n              Vitals\n            </h5>\n          </div>\n          <div className=\"row p-2\">\n            <Collapse\n              in={this.state.open}\n              className=\"container-fluid\"\n              id=\"patientVitals\"\n            >\n              <div className=\"col-12\">\n                <div className=\"row\">\n                  <div className=\"col-6 oxygenation-chart\">\n                    <canvas this=\"oxygenationChart\"></canvas>\n                  </div>\n                  <div className=\"col-6 heart-beats-chart \">\n                    <canvas this=\"heartBeatsChart\"></canvas>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-6 breathing-rate-chart\">\n                    <canvas this=\"breathignRateChart\"></canvas>\n                  </div>\n                  <div className=\"col-6\">\n                    <div className=\"row blood-pressure-chart\">\n                      <canvas this=\"bloodPressureChart\"></canvas>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Collapse>\n          </div>\n        </div>\n      );\n    }\n  }\n  getVitals() {\n    //     api.getPatientVitals(this.props.patientId).then((data) => {\n    //       this.data = data;\n    //       data.forEach((item) => {\n    //         this.oxygenationData.push({\n    //           x: item.creationDate,\n    //           y: item.bloodOxygenation,\n    //           label: item.creationDate,\n    //         });\n    //         this.heartBeatsPerMinuteData.push({\n    //           x: item.creationDate,\n    //           y: item.heartBeatsPerMinute,\n    //           label: item.creationDate,\n    //         });\n    //         this.systolicData.push({\n    //           x: item.creationDate,\n    //           y: item.systolicPressure,\n    //           label: item.creationDate,\n    //         });\n    //         this.diastolicData.push({\n    //           x: item.creationDate,\n    //           y: item.diastolicPressure,\n    //           label: item.creationDate,\n    //         });\n    //         this.breathingRateData.push({\n    //           x: item.creationDate,\n    //           y: item.breathingRate,\n    //           label: item.creationDate,\n    //         });\n    //       });\n    //       this.createGraph(\n    //         this.oxygenationChart,\n    //         this.state.oxygenationData,\n    //         \"Blood Oxygenation\",\n    //         \"Reading Time\",\n    //         \"SpO2\"\n    //       );\n    //       this.createGraph(\n    //         this.heartBeatsChart,\n    //         this.state.heartBeatsPerMinuteData,\n    //         \"Beats Per Minute\",\n    //         \"Reading Time\",\n    //         \"BPM\"\n    //       );\n    //       this.createGraph(\n    //         this.breathignRateChart,\n    //         this.state.breathingRateData,\n    //         \"Breathing Rate\",\n    //         \"Reading Time\",\n    //         \"Breathing Rate\"\n    //       );\n    //       this.createBloodPressureGraph(\n    //         this.bloodPressureChart,\n    //         this.systolicData,\n    //         this.state.diastolicData\n    //       );\n    //     });\n    //   }\n  }\n  createBloodPressureGraph(canvas, diastolicData, systolicData) {\n    canvas.width = canvas.parentNode.offsetWidth;\n    canvas.height = canvas.parentNode.offsetHeight;\n    new Chart(canvas.getContext(\"2d\"), {\n      type: \"scatter\",\n      data: {\n        datasets: [\n          {\n            label: \"Systolic\",\n            borderColor: \"#ff0000\",\n            data: systolicData,\n            fill: false,\n            showLine: true,\n            lineTension: 0,\n          },\n          {\n            label: \"Diastolic\",\n            borderColor: \"#ff0000\",\n            data: diastolicData,\n            fill: false,\n            showLine: true,\n            lineTension: 0,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        title: {\n          display: true,\n          text: \"Blood Pressure\",\n        },\n        scales: {\n          xAxes: [\n            {\n              type: \"time\",\n              time: {\n                displayFormats: {\n                  hour: \"MMM D hA\",\n                },\n                unit: \"hour\",\n              },\n            },\n          ],\n          x: {\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: \"Reading Time\",\n            },\n          },\n          y: {\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: \"mmHg\",\n            },\n          },\n        },\n      },\n    });\n  }\n  createGraph(canvas, dataset, name, xLabel, yLabel) {\n    canvas.width = canvas.parentNode.offsetWidth;\n    canvas.height = canvas.parentNode.offsetHeight;\n    new Chart(canvas.getContext(\"2d\"), {\n      type: \"scatter\",\n      data: {\n        datasets: [\n          {\n            label: name,\n            borderColor: \"#ff0000\",\n            data: dataset,\n            fill: false,\n            showLine: true,\n            lineTension: 0,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        title: {\n          display: true,\n          text: name,\n        },\n        scales: {\n          xAxes: [\n            {\n              type: \"time\",\n              time: {\n                displayFormats: {\n                  hour: \"MMM D hA\",\n                },\n                unit: \"hour\",\n              },\n            },\n          ],\n          x: {\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: xLabel,\n            },\n          },\n          y: {\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: yLabel,\n            },\n          },\n        },\n      },\n    });\n  }\n}\nexport default Vitals;\n","import React, { Component } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport \"./../App.css\";\n\nclass MedicalProfile extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"col-12 py-1\">\n          <Form.Group>\n            <Form.Check\n              disabled\n              type=\"checkbox\"\n              label=\"G6PD Deficiency\"\n              checked={this.props.g6pdDeficiency}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Check\n              disabled\n              type=\"checkbox\"\n              label=\"Respiratory Diseases\"\n              checked={this.props.respiratoryDiseases}\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Check\n              disabled\n              type=\"checkbox\"\n              label=\"Diabetes\"\n              checked={this.props.diabetes}\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Check\n              disabled\n              type=\"checkbox\"\n              label=\"Cardiovascular Diseases\"\n              checked={this.props.cardiovascularDiseases}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Check\n              disabled\n              type=\"checkbox\"\n              label=\"Obesity\"\n              checked={this.props.obesity}\n            />\n          </Form.Group>\n        </div>\n        <h5 className=\"d-block mx-auto p-2 mt-3\">Current Medications</h5>\n        <div className=\"col-12\">\n          <ul>\n            {this.props.medications.map((medication) => (\n              <li key={this.props.medications.indexOf(medication)}>\n                {medication}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\nexport default MedicalProfile;\n","import React, { Component } from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport \"./../App.css\";\nimport MedicalProfile from \"./MedicalProfile\";\nimport * as api from \"../utils/api\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      age: \"\",\n      sex: \"\",\n      height: \"\",\n      weight: \"\",\n      respiratoryDiseases: false,\n      g6pdDeficiency: false,\n      diabetes: false,\n      cardiovascularDiseases: false,\n      obesity: false,\n      medications: [],\n    };\n    this.getPatientProfile = this.getPatientProfile.bind(this);\n  }\n  componentDidMount() {\n    this.getPatientProfile();\n  }\n  getPatientProfile() {\n    api.getPatientMedicalProfile(this.props.patientId).then((json) => {\n      let sex = \"\";\n      if (json.sex === \"Male\") {\n        sex = \"Male\";\n      } else {\n        sex = \"Female\";\n      }\n      this.setState({\n        age: json.age,\n        height: json.height,\n        weight: json.weight,\n        sex: sex,\n        g6pdDeficiency: json.g6pdDeficiency,\n        respiratoryDiseases: json.respiratoryDiseases,\n        cardiovascularDiseases: json.cardiovascularDiseases,\n        diabetes: json.diabetes,\n        obesity: json.obseity,\n        medications: json.medications,\n      });\n    });\n    api.getPatientPersonalProfile(this.props.patientId).then((json) => {\n      this.setState({ name: json.firstName + \" \" + json.lastName });\n    });\n    //dummy data\n    this.setState({\n      name: \"Majed nuss\",\n      age: \"23\",\n      sex: \"Male\",\n      height: \"175\",\n      weight: \"85\",\n      respiratoryDiseases: false,\n      g6pdDeficiency: false,\n      diabetes: false,\n      cardiovascularDiseases: false,\n      obesity: false,\n      medications: [],\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"p-0 border-right\">\n        <div className=\"d-flex row pt-4 pl-5\">\n          <img\n            alt=\"patient-profile-img\"\n            className=\"profile-img m-0\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/768px-Circle-icons-profile.svg.png\"\n          ></img>\n          <div className=\"ml-2\">\n            <h5 className=\"mb-0\">{this.state.name}</h5>\n            <h6 className=\"text-secondary\">{this.state.age} Years Old</h6>\n          </div>\n        </div>\n        <h5 className=\"bg-info text-white d-block mx-auto p-2 mt-3\">\n          General Info\n        </h5>\n        <Row className=\"text-center p-3\">\n          <div className=\"col-4\">\n            <h6>Sex</h6>\n            <h4 className=\"text-info\">{this.state.sex}</h4>\n          </div>\n          <div className=\"col-4\">\n            <h6>Height</h6>\n            <div className=\"d-inline-flex text-info\">\n              <h4>{this.state.height}</h4>\n              <p className=\"ml-1\">cm</p>\n            </div>\n          </div>\n          <div className=\"col-4\">\n            <h6>Weight</h6>\n            <div className=\"d-inline-flex text-info\">\n              <h4>{this.state.weight}</h4>\n              <p className=\"ml-1\">kg</p>\n            </div>\n          </div>\n        </Row>\n        <h5 className=\"bg-info text-white d-block mx-auto p-2 mt-3\">\n          Medical Flags\n        </h5>\n        <MedicalProfile\n          respiratoryDiseases={this.state.respiratoryDiseases}\n          g6pdDeficiency={this.state.g6pdDeficiency}\n          diabetes={this.state.diabetes}\n          cardiovascularDiseases={this.state.cardiovascularDiseases}\n          obesity={this.state.obesity}\n          medications={this.state.medications}\n        ></MedicalProfile>\n        <h5 className=\"bg-info  text-white d-block mx-auto p-2 mt-3\">\n          Current Medications\n        </h5>\n        <ul>\n          {this.state.medications.map((medication) => (\n            <li key={this.state.medications.indexOf(medication)}>\n              {medication}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\nexport default Profile;\n","import React, { Component } from \"react\";\nimport { Tabs, Tab } from \"react-bootstrap\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Navbar from \"../../components/Navbar\";\nimport Answers from \"./../../components/Answers\";\nimport Symptoms from \"./../../components/Symptoms\";\nimport Vitals from \"./../../components/Vitals\";\nimport MedicalProfile from \"../../components/MedicalProfile\";\nimport Profile from \"../../components/Profile\";\nimport \"./../../App.css\";\nimport * as api from \"../../utils/api\";\n\nclass PatientDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientId: this.props.match.params.id,\n      name: \"\",\n      age: \"\",\n      sex: \"\",\n      height: \"\",\n      weight: \"\",\n      respiratoryDiseases: false,\n      g6pdDeficiency: false,\n      diabetes: false,\n      cardiovascularDiseases: false,\n      obesity: false,\n      medications: [],\n      width: window.innerWidth,\n      key: \"flags\",\n    };\n    this.setKey = this.setKey.bind(this);\n    this.getPatientProfile = this.getPatientProfile.bind(this);\n  }\n\n  setKey(number) {\n    this.setState({ activeTab: number });\n  }\n  updateDimensions = () => {\n    this.setState({ width: window.innerWidth });\n  };\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n  componentDidMount() {\n    this.getPatientProfile(this.state.patientId);\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n\n  getPatientProfile(patientId) {\n    api.getPatientMedicalProfile(patientId).then((json) => {\n      let sex = \"\";\n      if (json.sex === \"Male\") {\n        sex = \"Male\";\n      } else {\n        sex = \"Female\";\n      }\n      this.setState({\n        patientId: patientId,\n        age: json.age,\n        height: json.height,\n        weight: json.weight,\n        sex: sex,\n        g6pdDeficiency: json.g6pdDeficiency,\n        respiratoryDiseases: json.respiratoryDiseases,\n        cardiovascularDiseases: json.cardiovascularDiseases,\n        diabetes: json.diabetes,\n        obesity: json.obseity,\n        medications: json.medications,\n      });\n    });\n    api.getPatientPersonalProfile(patientId).then((json) => {\n      this.setState({ name: json.firstName + \" \" + json.lastName });\n    });\n\n    this.setState({\n      patientId: patientId,\n      name: \"Majed nuss\",\n      age: \"23\",\n      sex: \"Male\",\n      height: \"175\",\n      weight: \"85\",\n      respiratoryDiseases: false,\n      g6pdDeficiency: false,\n      diabetes: false,\n      cardiovascularDiseases: false,\n      obesity: false,\n      medications: [],\n    });\n  }\n  render() {\n    let askUrl = \"/ask/\" + this.state.patientId;\n    if (this.state.width <= 1080) {\n      return (\n        <Navbar>\n          <div className=\"p-0 border-right\">\n            <div className=\"d-flex p-3\">\n              <img\n                alt=\"patient-profile-img\"\n                className=\" patient-profile-img\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/768px-Circle-icons-profile.svg.png\"\n              ></img>\n              <div className=\" ml-4 mt-2\">\n                <h5 className=\"mb-1\">{this.state.name}</h5>\n                <h6 className=\"text-secondary\">{this.state.age} Years Old</h6>\n              </div>\n            </div>\n            <div className=\"border-top border-bottom row m-0 text-center px-2 pt-2\">\n              <div className=\"col-4\">\n                <h6>Sex</h6>\n                <h4 className=\"text-info\">{this.state.sex}</h4>\n              </div>\n              <div className=\"col-4\">\n                <h6>Height</h6>\n                <div className=\"d-inline-flex text-info\">\n                  <h4>{this.state.height}</h4>\n                  <p className=\"ml-1\">cm</p>\n                </div>\n              </div>\n              <div className=\"col-4\">\n                <h6>Weight</h6>\n                <div className=\"d-inline-flex text-info\">\n                  <h4>{this.state.weight}</h4>\n                  <p className=\"ml-1\">kg</p>\n                </div>\n              </div>\n            </div>\n            <div>\n              <Tabs\n                className=\"font-weight-bold\"\n                id=\"controlled-tab-example\"\n                activeKey={this.state.key}\n                onSelect={(key) => this.setState({ key })}\n              >\n                <Tab eventKey=\"flags\" title=\" Medical Flags\">\n                  <div className=\"pl-2\">\n                    <h5 className=\"d-block mx-auto p-2 mt-3\">Medical Flags</h5>\n                    <MedicalProfile\n                      respiratoryDiseases={this.state.respiratoryDiseases}\n                      g6pdDeficiency={this.state.g6pdDeficiency}\n                      diabetes={this.state.diabetes}\n                      cardiovascularDiseases={this.state.cardiovascularDiseases}\n                      obesity={this.state.obesity}\n                      medications={this.state.medications}\n                    ></MedicalProfile>\n                  </div>\n                </Tab>\n                <Tab eventKey=\"symptoms\" title=\"Symptoms\">\n                  <Symptoms patientId={this.state.patientId} />\n                </Tab>\n                <Tab eventKey=\"answers\" title=\"Answers\">\n                  <Answers patientId={this.state.patientId} />\n                </Tab>\n                <Tab eventKey=\"vitals\" title=\"Vitals\">\n                  <Vitals patientId={this.state.patientId} />\n                </Tab>\n              </Tabs>\n            </div>\n          </div>\n        </Navbar>\n      );\n    } else {\n      return (\n        <Navbar>\n          <div className=\"d-flex justify-content-between\">\n            <h4 className=\"ml-3 mt-5\">Patient Profile</h4>\n            <Link\n              className=\"btn btn-primary mr-3 mt-5 btn-sm text-white\"\n              to={askUrl}\n            >\n              Questions\n            </Link>\n          </div>\n          <div className=\"row m-3 bg-light\">\n            <Vitals patientId={this.state.patientId} />\n          </div>\n          <div className=\"row m-3 border bg-light\">\n            <div className=\"col-lg-4 p-0 border-right\">\n              <Profile patientId={this.state.patientId} />\n            </div>\n            <div className=\"col-lg-8 bg-light\">\n              <div className=\"row \">\n                <div className=\"col-lg-6\">\n                  <Symptoms patientId={this.state.patientId} />\n                </div>\n                <div className=\"col-lg-6\">\n                  <Answers patientId={this.state.patientId} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </Navbar>\n      );\n    }\n  }\n}\nexport default withRouter(PatientDetails);\n","import React, { Component } from \"react\";\nimport { Modal, Button, Form, Row, Collapse } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./../App.css\";\nimport * as api from \"../utils/api\";\n\nclass AddEditQuestion extends Component {\n  constructor(props) {\n    super(props);\n    if (typeof this.props.data !== \"undefined\") {\n      let data = this.props.data;\n      this.state = {\n        questionText: data.question,\n        questionType: data.type,\n        recurrance: data.recurrance,\n        fromDate: new Date(data.startDate).toLocaleDateString(),\n        toDate: new Date(data.endDate).toLocaleDateString(),\n        recurring: data.recurring,\n        repetitions: [],\n      };\n    } else {\n      this.state = {\n        questionText: \"\",\n        questionType: \"\",\n        recurrance: [],\n        fromDate: \"\",\n        toDate: \"\",\n        recurring: false,\n        repetitions: [],\n      };\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit() {\n    api\n      .addQuestion(this.props.patientId, {\n        question: this.state.questionText,\n        type: this.state.questionType,\n        recurring: this.state.recurring,\n        recurrance: this.state.recurrance,\n        startDate: Date.parse(this.state.fromDate),\n        endDate: Date.parse(this.state.toDate),\n      })\n      .then((res) => {\n        this.props.onClose();\n      });\n  }\n  handleChange(e) {\n    let id = e.target.id;\n    switch (id) {\n      case \"question-text-input\":\n        this.setState({ questionText: e.target.value });\n        break;\n      case \"question-type-input\":\n        this.setState({ questionType: e.target.value });\n        break;\n      case \"from-date-input\":\n        this.setState({ fromDate: e.target.value });\n        break;\n      case \"to-date-input\":\n        this.setState({ toDate: e.target.value });\n        break;\n      default:\n    }\n  }\n  handleRecurring() {\n    this.setState({ recurring: !this.state.recurring });\n  }\n  handleAddRecurrence() {\n    this.state.recurrance.push({ hourOfDay: 0, minuteOfHour: 0 });\n    this.setState(this.state.recurrance);\n  }\n  render() {\n    return (\n      <Modal\n        style={{ zIndex: 9999 }}\n        show={this.props.show}\n        onHide={this.props.onClose}\n        animation={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add/Edit Question</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Row>\n            <Form.Group className=\"col\">\n              <Form.Label>Question</Form.Label>\n              <Form.Control\n                id=\"question-text-input\"\n                value={this.state.questionText}\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n          </Row>\n          <Row>\n            <div className=\"col\">\n              <Form.Group>\n                <Form.Label>Question Type</Form.Label>\n                <Form.Control\n                  id=\"question-type-input\"\n                  as=\"select\"\n                  value={this.state.questionType}\n                  onChange={this.handleChange}\n                >\n                  <option>Please Select</option>\n                  <option value=\"Scale\">Scale</option>\n                  <option value=\"Binary\">Binary</option>\n                  <option value=\"Text\">Text</option>\n                  <option value=\"Vitals\">Vitals</option>\n                </Form.Control>\n              </Form.Group>\n              <Form.Group>\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"Recurring?\"\n                  checked={this.state.recurring}\n                  onChange={this.handleRecurring.bind(this)}\n                  aria-controls=\"recurrance-row\"\n                  aria-expanded={this.state.recurring}\n                />\n              </Form.Group>\n            </div>\n          </Row>\n          <Collapse in={this.state.recurring}>\n            <Row id=\"recurrance-row\">\n              <Form.Group className=\"col\">\n                <Form.Label>From Date</Form.Label>\n                <Form.Control\n                  onChange={this.handleChange}\n                  id=\"from-date-input\"\n                  type=\"text\"\n                  value={this.state.fromDate}\n                />\n              </Form.Group>\n              <Form.Group className=\"col\">\n                <Form.Label>To Date</Form.Label>\n                <Form.Control\n                  onChange={this.handleChange}\n                  id=\"to-date-input\"\n                  type=\"text\"\n                  value={this.state.toDate}\n                />\n              </Form.Group>\n\n              <div className=\"col-12\">\n                <table className=\"table\" this=\"table\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" className=\"text-left\">\n                        #\n                      </th>\n                      <th scope=\"col\" className=\"text-center\">\n                        Recurrence Time\n                      </th>\n                      <th scope=\"col\" className=\"text-right\"></th>\n                    </tr>\n                  </thead>\n                  {this.state.recurrance.map((repetition) => (\n                    <Repetition key={this.state.recurrance.indexOf(repetition)}>\n                      {repetition}\n                    </Repetition>\n                  ))}\n                </table>\n              </div>\n              <div className=\"col-12 d-flex justify-content-end mr-5\">\n                <Button\n                  className=\"btn btn-primary btn-sm \"\n                  onClick={this.handleAddRecurrence.bind(this)}\n                >\n                  <FontAwesomeIcon icon={faPlus} />\n                </Button>\n              </div>\n            </Row>\n          </Collapse>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onClose}>\n            Close\n          </Button>\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            onSubmit={this.handleSubmit.bind(this)}\n          >\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\nexport default AddEditQuestion;\n\n// this.repetitions.el.addEventListener(\"repetitionRemoved\", (e) => {\n//     this.repetitions.update(e.detail.newList)\n// })\n\nclass Repetition extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      repitition: this.props.children,\n      items: [],\n      timeInput:\n        (\"\" + this.props.children.hourOfDay).padStart(2, \"0\") +\n        \":\" +\n        (\"\" + this.props.children.minuteOfHour).padStart(2, \"0\"),\n      indexText: \"\",\n    };\n\n    // this.timeInput.oninput = (e) => {\n    //   if (e.target.value) {\n    //     let splits = e.target.value.split(\":\");\n    //     this.data.hourOfDay = parseInt(splits[0]);\n    //     this.data.minuteOfHour = parseInt(splits[1]);\n    //   }\n    // };\n  }\n  onDelete() {\n    //work on deleting recurrance..\n    // this._delete();\n  }\n  handleInput(e) {\n    // we need to fix this too...\n    if (e.target.value) {\n      let splits = e.target.value.split(\":\");\n      let hourOfDay = parseInt(splits[0]);\n      let minuteOfHour = parseInt(splits[1]);\n\n      this.setState({\n        timeInput: { hourOfDay, minuteOfHour },\n      });\n    }\n  }\n  render() {\n    return (\n      <tbody>\n        <tr>\n          <td className=\"text-left\">{this.state.indexText}</td>\n          <td className=\"text-center\">\n            <input\n              className=\"repetition-time\"\n              value={this.state.timeInput}\n              onInput={this.handleInput.bind(this)}\n              type=\"time\"\n            ></input>\n          </td>\n          <td className=\"text-right\">\n            <a onClick={this.onDelete.bind(this)}>\n              <FontAwesomeIcon icon={faTimes} />\n            </a>\n          </td>\n        </tr>\n      </tbody>\n    );\n  }\n\n  _delete() {\n    this.items.splice(this.index, 1);\n    this.el.dispatchEvent(\n      new CustomEvent(\"repetitionRemoved\", {\n        detail: { newList: this.items },\n        bubbles: true,\n      })\n    );\n  }\n\n  // update(data, index, items) {\n  //   this.data = data;\n  //   this.index = index;\n  //   this.items = items;\n  //   this.indexText.textContent = index + 1;\n  //   this.timeInput.value =\n  //     (\"\" + this.data.hourOfDay).padStart(2, \"0\") +\n  //     \":\" +\n  //     (\"\" + this.data.minuteOfHour).padStart(2, \"0\");\n  // }\n}\n","import React, { Component } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport { Button } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport AddEditQuestion from \"../../components/AddEditQuestion\";\nimport * as api from \"../../utils/api\";\n\nclass PatientQuestions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientId: this.props.match.params.id,\n      questions: [],\n      showModal: false,\n    };\n    this.loadQuestions = this.loadQuestions.bind(this);\n  }\n\n  handleModalClose() {\n    this.setState({ showModal: false });\n  }\n\n  componentDidMount() {\n    this.loadQuestions();\n  }\n\n  loadQuestions() {\n    api.getPatientQuestions(this.state.patientId).then((json) => {\n      this.setState({ questions: json });\n    });\n    //dummy data\n    this.setState({\n      questions: [\n        {\n          id: 1,\n          question: \"Do you have a fever?\",\n          repetition: \"none\",\n          recurrance: [],\n          recurring: false,\n          startDate: \"\",\n          endDate: \"\",\n        },\n        {\n          id: 3,\n          question: \"Do you have a fever?\",\n          type: \"Scale\",\n          recurrance: [],\n          recurring: false,\n          startDate: \"\",\n          endDate: \"\",\n        },\n        {\n          id: 2,\n          question: \"Do you have a fever?\",\n          type: \"Scale\",\n          recurrance: [],\n          recurring: false,\n          startDate: \"\",\n          endDate: \"\",\n        },\n        {\n          id: 4,\n          question: \"Do you have a fever?\",\n          type: \"Scale\",\n          recurrance: [\n            { hourOfDay: 0, minuteOfHour: 0 },\n            { hourOfDay: 2, minuteOfHour: 2 },\n          ],\n          recurring: true,\n          startDate: \"15/7/2019\",\n          endDate: \"15/7/2019\",\n        },\n      ],\n    });\n  }\n\n  handleAddQuestion() {\n    this.setState({ showModal: true });\n  }\n\n  render() {\n    return (\n      <Navbar>\n        <div className=\"col-sm-12 mt-4\">\n          <div className=\"d-flex justify-content-between\">\n            <h4>Questions</h4>\n            <Button\n              className=\"btn btn-primary btn-sm\"\n              onClick={this.handleAddQuestion.bind(this)}\n            >\n              <FontAwesomeIcon icon={faPlus} />\n            </Button>\n            <AddEditQuestion\n              patientId={this.state.patientId}\n              show={this.state.showModal}\n              onClose={this.handleModalClose.bind(this)}\n            />\n          </div>\n          <div className=\"mt-4\">\n            <table className=\"table\" this=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\" className=\"text-left\">\n                    Question\n                  </th>\n                  <th scope=\"col\" className=\"text-center\">\n                    Repetitions\n                  </th>\n                  <th scope=\"col\" className=\"text-right\"></th>\n                </tr>\n              </thead>\n              {this.state.questions.map((question) => (\n                <Question\n                  patientId={this.state.patientId}\n                  key={this.state.questions.indexOf(question)}\n                >\n                  {question}\n                </Question>\n              ))}\n            </table>\n          </div>\n        </div>\n      </Navbar>\n    );\n  }\n}\nexport default withRouter(PatientQuestions);\n\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n    let repetitionText = \"None\";\n    if (this.props.children.recurring) {\n      repetitionText = this.props.children.recurrance.length + \" Times\";\n    }\n    this.state = {\n      question: this.props.children,\n      showModal: false,\n      repetition: repetitionText,\n    };\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n  handleEdit() {\n    this.setState({ showModal: true });\n  }\n  handleModalClose() {\n    this.setState({ showModal: false });\n  }\n\n  render() {\n    return (\n      <tbody>\n        <tr>\n          <td className=\"text-left\">{this.state.question.question}</td>\n          <td className=\"text-center\">{this.state.repetition}</td>\n          <td className=\"text-right\">\n            <Button className=\"btn-sm\" onClick={this.handleEdit}>\n              <FontAwesomeIcon icon={faPen} />\n            </Button>\n            <AddEditQuestion\n              data={this.props.children}\n              patientId={this.props.patientId}\n              show={this.state.showModal}\n              onClose={this.handleModalClose.bind(this)}\n            />\n          </td>\n        </tr>\n      </tbody>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport { Link } from \"react-router-dom\";\nimport * as api from \"../../utils/api\";\n\nclass PatientList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { patients: [] };\n    this.getPatientList = this.getPatientList.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPatientList();\n  }\n\n  render() {\n    return (\n      <Navbar>\n        <div className=\"col-sm-12 mt-4\">\n          <h4>My Patients</h4>\n          <div className=\"mt-4\">\n            <table className=\"table\" this=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\" className=\"text-left\">\n                    Name\n                  </th>\n                  <th scope=\"col\" className=\"text-center\">\n                    Number\n                  </th>\n                  <th scope=\"col\" className=\"text-right\">\n                    Profile\n                  </th>\n                </tr>\n              </thead>\n              {this.state.patients.map((patient) => (\n                <PatientEntry key={this.state.patients.indexOf(patient)}>\n                  {patient}\n                </PatientEntry>\n              ))}\n            </table>\n          </div>\n        </div>\n      </Navbar>\n    );\n  }\n\n  getPatientList() {\n    api.getPatients().then((json) => {\n      this.setState({ patients: json });\n    });\n    //dummy data\n    this.setState({\n      patients: [\n        {\n          id: 1,\n          name: \"Majed Nuss\",\n          number: \"123\",\n        },\n        {\n          id: 2,\n          name: \"Ahmad Nuss\",\n          number: \"123\",\n        },\n        {\n          id: 3,\n          name: \"Mutaz Nuss\",\n          number: \"123\",\n        },\n      ],\n    });\n  }\n}\nexport default PatientList;\n\nclass PatientEntry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patient: this.props.children,\n      id: this.props.children.id,\n    };\n  }\n  render() {\n    let url = \"/patient/\" + this.state.id;\n    return (\n      <tbody>\n        <tr>\n          <td className=\"text-left\">{this.state.patient.name}</td>\n          <td className=\"text-center\">{this.state.patient.number}</td>\n          <td className=\"text-right\">\n            <Link to={url} className=\"btn btn-primary btn-sm\">\n              Profile\n            </Link>\n          </td>\n        </tr>\n      </tbody>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Row, Button, Form } from \"react-bootstrap\";\nimport \"./Signin.css\";\nimport Logo from \"./../../images/openmymed.png\";\nimport { loadIcpc } from \"../../utils/icpc\";\nimport * as api from \"../../utils/api\";\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\", width: window.innerWidth };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  updateDimensions = () => {\n    console.log(window.innerWidth);\n    this.setState({ width: window.innerWidth });\n  };\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render() {\n    if (this.state.width <= 790) {\n      return (\n        <div className=\"Login\">\n          <img src={Logo} alt=\"logo\" />\n          <h1 className=\"mt-5 text-info\">Access.md</h1>\n          <h2 className=\"text-info\">Sign In</h2>\n\n          <Form className=\"mt-5 form\" onSubmit={this.handleSubmit}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                value={this.state.username}\n                type=\"text\"\n                onChange={this.handleChange}\n                placeholder=\"Username\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                value={this.state.password}\n                type=\"password\"\n                onChange={this.handleChange}\n                placeholder=\"Password\"\n              />\n            </Form.Group>\n            <Form.Control.Feedback type=\"invalid\">\n              Incorrect Username or Password.\n            </Form.Control.Feedback>\n            <Button className=\"mt-4 btn-block\" variant=\"info\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Row className=\"m-0\">\n            <div className=\" col-4 vh-100 bg-info\">\n              <div className=\"sidebar text-white text-center \">\n                <h1>ACCESS.MD</h1>\n                <img src={Logo} alt=\"logo\"></img>\n              </div>\n            </div>\n            <div className=\"col-8\">\n              <div className=\"w-50 log ml-5\">\n                <Form onSubmit={this.handleSubmit}>\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                      value={this.state.username}\n                      type=\"text\"\n                      onChange={this.handleChange}\n                      placeholder=\"Username\"\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                      value={this.state.password}\n                      type=\"password\"\n                      onChange={this.handleChange}\n                      placeholder=\"Password\"\n                    />\n                  </Form.Group>\n                  <Form.Control.Feedback type=\"invalid\">\n                    Incorrect Username or Password.\n                  </Form.Control.Feedback>\n                  <Button type=\"submit\" className=\"btn btn-info\" variant=\"info\">\n                    Login\n                  </Button>\n                </Form>\n              </div>\n            </div>\n          </Row>\n        </div>\n      );\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    api.login(this.state.username, this.state.password).then((json) => {\n      sessionStorage.setItem(\"role\", json.userRole);\n      let fullName = json.firstName + \" \" + json.lastName;\n      if (json.userRole === \"ROLE_DOCTOR\") {\n        sessionStorage.setItem(\"auth\", true);\n        loadIcpc();\n        sessionStorage.setItem(\"name\", fullName);\n        this.props.history.push(\"/home\");\n      } else if (json.userRole === \"ROLE_ADMIN\") {\n        sessionStorage.setItem(\"auth\", true);\n        sessionStorage.setItem(\"name\", fullName);\n        this.props.history.push(\"/admin\");\n      } else {\n        sessionStorage.setItem(\"auth\", false);\n        alert(\"You do not have the authorization for this page\");\n      }\n    });\n    this.props.history.push(\"/home\");\n  }\n  handleChange(e) {\n    if (e.target.type === \"text\") {\n      this.setState({ username: e.target.value });\n    } else if (e.target.type === \"password\") {\n      this.setState({ password: e.target.value });\n    }\n  }\n}\n\nexport default Signin;\n","/* \n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\nexport const loadIcpc = () => {\n  return  fetch(\"/symptom/codes\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      alert(\"Wrong username or password\");\n    }\n  }).then(data => {\n    window.localStorage.setItem(\"icpc\", JSON.stringify(data))\n  })\n}\n\n\nexport const getTitle = (code) => {\n  let i = 0;\n  let codes = JSON.parse(window.localStorage.getItem(\"icpc\"));\n  for (i; i < codes.length; i++) {\n    if (codes[i].code === code) {\n      return codes[i].title;\n    }\n  }\n  return \"CODE \" + code + \" NOT FOUND\";\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./views/Home/Home\";\nimport PatientDetails from \"./views/Patient-Details/PatientDetails\";\nimport PatientQuestions from \"./views/Patient-Questions/PatientQuestions\";\nimport PatientList from \"./views/Patient-List/PatientList\";\nimport Signin from \"./views/Signin/Signin\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Signin} />\n          <Route path=\"/patients\" component={PatientList} />\n          <Route path=\"/patient/:id\" children={<PatientDetails />} />\n          <Route path=\"/ask/:id\" children={<PatientQuestions />} />\n          <Route path=\"/home\" component={Home} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}